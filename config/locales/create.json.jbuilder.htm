<!DOCTYPE html>
<!-- saved from url=(0044)https://master.tech-camp.in/curriculums/2148 -->
<html lang="ja" class=""><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}</style><script type="text/javascript" async="" src="./create.json.jbuilder_files/analytics.js"></script><script async="" src="./create.json.jbuilder_files/analytics.js"></script><script type="text/javascript" async="" charset="utf-8" src="./create.json.jbuilder_files/tracker.js"></script><script type="text/javascript" async="" src="./create.json.jbuilder_files/js"></script><script async="" src="./create.json.jbuilder_files/analytics.js"></script><script async="" src="./create.json.jbuilder_files/gtm.js"></script><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-WSQ5HQW');</script><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-117266470-1', 'auto', {allowLinker: true});
ga('require', 'GTM-5ZZL9PL');</script><style type="text/css">.async-hide{opacity:0 !important}</style><script>(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
(a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
})(window,document.documentElement,'async-hide','dataLayer',4000,
{'GTM-5ZZL9PL':true});</script><title></title><link href="./create.json.jbuilder_files/application-23cde9ba17d411bf6c6dc43877e73d08e6a07a98c491b78ec2d362765c37241e.css" media="all" rel="stylesheet"><script src="./create.json.jbuilder_files/bundle.app-cbedbd5dcfdbe04f75794436896ffc61f18ab3e977d176bf536844ae3bc538a6.js"></script><link href="./create.json.jbuilder_files/icon.css" rel="stylesheet"><meta content="authenticity_token" name="csrf-param">
<meta content="yFYFZjZb445axNoknJ9bTaLcVyt4Mn9S1lkilDjyUNU=" name="csrf-token"><link href="https://master.tech-camp.in/favicon.ico" rel="icon" sizes="16x16 32x32 48x48 128x128 256x256"><link href="./create.json.jbuilder_files/font-awesome.min.css" rel="stylesheet"><link href="./create.json.jbuilder_files/tiny-slider.css" rel="stylesheet"><script src="./create.json.jbuilder_files/tiny-slider.js"></script><script>(function(){var t,e,r,n,a;for(t=function(){var t;return t=t||[],function(){var e,r,n,a;for(r=["init","start","stop","user","track","action","event","goal","chat","buy","page","view","admin","group","alias","ready","link","form","click","submit","cmd","emit","on","send","css","js","style","option","get","set","collection"],e=function(e){return function(){return t.push([e].concat(Array.prototype.slice.call(arguments,0)))}},n=0,a=[];n<r.length;)t[r[n]]=e(r[n]),a.push(n++);return a}(),t.init=function(e,r){var n,a;return t.api_key=e,t.options=r||{},a=document.createElement("script"),a.type="text/javascript",a.async=!0,a.charset="utf-8",a.src=t.options.tracker_url||"https://static.karte.io/libs/tracker.js",n=document.getElementsByTagName("script")[0],n.parentNode.insertBefore(a,n)},t},n=window.karte_tracker_names||["tracker"],e=0,r=n.length;r>e;e++)a=n[e],window[a]=t();tracker.init("7184e5e57be1c1617c52291a842d1411")}).call(this);</script><script>var karte = new window.Karte({"id":14299,"email":"st_hy0825@icloud.com","proposal_id":null,"family_name":"斉藤","first_name":"正直","family_name_kana":"サイトウ","first_name_kana":"マサナオ","email_address":null,"created_at":"2019-01-16T16:15:15.000+09:00","updated_at":"2019-03-13T12:10:08.000+09:00","admin":false,"permission":"student","group_id":null,"period_id":100005,"advance_flag":false,"coming":"come_in","course_id":32,"course_state":"during","image":{"url":"/uploads/noimage.png","mypage":{"url":"/uploads/noimage.png"},"navigation":{"url":"/uploads/noimage.png"},"large_image":{"url":"/uploads/noimage.png"}},"start_datetime":"2019-01-12T00:00:00.000+09:00","finish_datetime":"2019-04-05T00:00:00.000+09:00","skype_id":"","location":{"id":14,"name":"EXPERT渋谷","tc_location_id":14,"address":"","slack_shift_remind_channel":"#shift_remind_shibuya","slack_question_channel":"#expert_user_question","question_window":true,"questionnaire":false,"morning_cleaning_allowance":1000,"night_cleaning_allowance":500,"slack_ori_app_interview_remind_channel":"","original_application_interview_location_id":15,"slack_coming_guest_notification_channel":"#受付_exp渋谷_フォンティス","status":"expert","open_time":"2000-01-01T16:00:00.000+09:00","close_time":"2000-01-01T22:00:00.000+09:00","is_closed":false,"region":"kanto","calling_message":"下駄箱に靴を入れて頂き、\r\n左手にある自動販売機の前のテーブル席にお掛けになってお待ちください。"},"style":"expert_immersive","location_id":14,"absence_days":0,"company_id":null,"company_admin":false,"mail_counter":0,"send_remind_mail":true,"pc":"mac","trigger_to_apply":null,"pass_confirmation":null,"interview_group_id":null,"coming_location_id":14,"trainer_id":null,"mentor_status":null,"will_show_mentoring_questionnaire":false,"is_blocked":false,"weekly_interview_mail_count":0,"send_weekly_interview_remind":true,"expert":true,"is_extending":false,"recent_join_datetime":"2019-02-09T13:04:00.000+09:00","hide_first_interview_reserve":false,"is_target_of_individual_finished":false,"launch_oriapp":false,"state_of_first_orientation":"normal","authentication_token":"W_GbJ61ZZBxQgdLD4Pm4"}, null, {"id":100005,"name":"TECH::CAMP EXPERT 第46期","start_datetime":"2019-01-12T00:00:00.000+09:00","finish_datetime":"2019-04-05T00:00:00.000+09:00","term":46,"authentication_code":"","status":"during","period_type":"two_weeks","company_id":null,"week_count":null,"department_type":"expert"});
karte.setProfileTag();
karte.sendTraker();</script><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-33391559-9', 'auto');
ga('send', 'pageview');</script></head><body ng-app="techMaster" class="ng-scope"><noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-WSQ5HQW" style="display:none;visibility:hidden" width="0"></iframe></noscript><div class="header navbar main_header navbar-fixed-top" id="header" role="navigation"><div class="container"><div class="navbar-header"><button aria-controls="navbar" aria-expanded="false" class="navbar-toggle collapsed" data-target="#navbar" data-toggle="collapse" type="button"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a class="navbar-brand" href="https://master.tech-camp.in/" target="_self"><img alt="TECH::MASTER" src="./create.json.jbuilder_files/logo-a092b24686f2404f48e1ef25bd8bfe7445b458e4587da135059132b867b10cbd.svg"></a></div><div class="navbar-collapse collapse" id="navbar"><ul class="nav navbar-nav navbar-left"></ul><ul class="nav navbar-nav navbar-right"><li><p>終了まで<strong>23</strong>日</p></li><li id="course_navigation"><a class="dropdown" data-toggle="dropdown">コース<i aria-hidden="true" class="fa fa-caret-down"></i></a><ul class="dropdown-menu inner-list" id="course-list" style="overflow: auto;"><li class="course-item" data-id="40771"><a>EXPERT基礎カリキュラム（Mac）</a></li><li class="course-item" data-id="40772"><a>就職活動カリキュラム</a></li><li class="course-item bg-info" data-id="42058"><a>応用カリキュラム（ChatSpace）</a></li></ul></li><li><a href="https://tech-camp.in/technology_seminars?utm_source=tm&amp;utm_medium=referral&amp;utm_campaign=header">テクノロジーセミナー</a></li><script>$(function() {
  var menuHeight = $(window).height() - 80;
  $('#js-menuheight').css('max-height', menuHeight + 'px');

  $('.js-switch-list').on('click', function(e) {
    e.stopPropagation();
    $('.js-list-group').toggle();
  });

  $('.js-course-select').on('click', function(e) {
    e.stopPropagation();
    var checkBox = $(this).find('input[type=checkbox]');
    checkBox.prop('checked', !checkBox.prop('checked'));
    $(this).hasClass('bg-info') ? $(this).removeClass('bg-info') : $(this).addClass('bg-info');
  });
});</script><li><p>斉藤 正直</p></li><li class="profileDropdown" data-target="#user-list"><a class="js-dropdown" id="profileDropdown"><img alt="斉藤 正直" class="avatar" src="./create.json.jbuilder_files/noimage.png"><i aria-hidden="true" class="fa fa-caret-down"></i></a><ul class="inner-list" id="user-list" style="display: none;"><li><a href="https://master.tech-camp.in/me" target="_self">アカウント</a></li><li><a href="https://tech-camp.in/extensions/new" target="_blank">学習継続</a></li><li><a href="https://master.tech-camp.in/inqueries/new" target="_blank">お問い合わせ</a></li><li><a href="https://tech-camp.in/expert/faq" target="_blank">FAQ</a></li></ul></li><script>$(function() {
  $('#profileDropdown').on('click', function() {
    $('.popover').toggle();
  });
});</script></ul></div></div></div><div id="toggle_navigation_banners"><input checked="checked" class="toggle_input" id="toggle" name="toggle" type="checkbox"><label class="toggle_label" for="toggle">お知らせ</label><div class="navigation_banners"><div class="navigation-banner"><div class="container"><div class="navbar-header"><span class="banner-icon banner-icon-notice">お知らせ</span>TECH::EXPERTがエンジニア養成プログラムでNo1を獲得！記念に<strong>最新MacBookプレゼントキャンペーン中！</strong>詳しくは<a class="banner-link" href="https://tech-camp.in/expert/campaign/no1/?utm_campaign=none&amp;utm_medium=header&amp;utm_source=tech_master" target="_blank">こちら</a>。</div></div></div><div class="navigation-banner"><div class="container"><div class="navbar-header"><span class="banner-icon banner-icon-notice">お知らせ</span>プロのエンジニアになって自分の技術で稼げる人材になりませんか？TECH::CAMP受講生は<strong>10万円OFF</strong>で受講できます！詳しくは<a class="banner-link" href="https://tech-camp.in/expert/campaign/tech_camp/?utm_campaign=none&amp;utm_medium=header&amp;utm_source=tech_master" target="_blank">こちら</a>をご確認ください。</div></div></div><div class="navigation-banner"><div class="container"><div class="navbar-header"><span class="banner-icon banner-icon-notice">お知らせ</span>新しいオンライン質問機能が公開されました。<a class="banner-link" href="https://master.tech-camp.in/curriculums/2988">詳しくはこちらのカリキュラムをお読みください。</a></div></div></div></div></div><!-- ngView:  --><div autoscroll="" ng-view="" class="ng-scope"><curriculum class="ng-scope" style="display: inline;">
  <div class="container" id="curriculum">
    <div class="row curriculum-inner">
      <div class="col-lg-12 main" ng-init="init()">
        <div class="page-header page ng-hide" style="background-image: url()" ng-show="curriculum.image">
  <h1 class="ng-binding">
    pictweetのコメント機能の非同期通信化<small class="ng-binding">〜〜</small>
  </h1>
  <!-- ngIf: curriculum.image.description.length -->
</div>
      </div>
      <div class="col-md-9 col-sm-12" id="curriculumMainContainer">
        <div class="curriculum_content">
          <div class="curriculum_text ng-scope" compile-progress-notifier="willCompiledCurriculumText" ng-controller="CurriculumHintController"><h1 class="ng-scope" id="1">本カリキュラムについて</h1>

<p class="ng-scope">このカリキュラムでは事前学習で作ったpictweetのコメント送信機能を非同期通信で行えるよう実装します。<br>
pictweetではコメントの送信機能を実装してありますが、コメントを送信するたびに送信画面にリダイレクトしているため、ビューが毎回再描画されてしまいます。<br>
JavaScript, jQuery基礎の5章で学んだ非同期通信を使って、コメントの送信を非同期で行えるようにしましょう。</p>

<h2 class="ng-scope" id="2">本カリキュラムの目的</h2>

<p class="ng-scope">実際のアプリケーションの中でjQueryを使用することで、どのようにJavaScript/jQueryを組み合わせるのかを学習していきましょう。</p>

<h1 class="ng-scope" id="3">pictweetのコメント機能を非同期通信で行ってみよう</h1>

<h2 class="ng-scope" id="4">事前準備</h2>

<p class="ng-scope">はじめにpictweetのコメント機能を非同期通信化するための準備を行います</p>

<h3 class="ng-scope">
<i class="icon pen"></i> 作成する機能を把握しよう</h3>

<p class="ng-scope">今回作成する機能は以下の画像のような機能です。<br>
いままでのpictweetのコメント送信機能と異なるのはajaxを使って非同期通信で行っている点です。</p>

<p class="ng-scope"><a href="https://gyazo.com/8025313e3f3b7fbbb5ab5fcff71abd28"><img src="./create.json.jbuilder_files/8025313e3f3b7fbbb5ab5fcff71abd28.gif" alt="https://gyazo.com/8025313e3f3b7fbbb5ab5fcff71abd28"></a></p>

<h3 class="ng-scope">
<i class="icon pen"></i>作業ディレクトリを事前学習中に完成させたpictweetに移動しましょう</h3>

<div class="code-frame ng-scope" data-lang="bash">
<div class="code-lang"><span class="bold">ターミナル</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td>
<td class="code">
<div class="highlight"><pre><span class="nv">$ </span><span class="nb">cd</span>  <span class="c">#ホームディレクトリに移動</span>
<span class="nv">$ </span><span class="nb">cd </span>projects <span class="c">#projectsディレクトリに移動（projectsとは異なるディレクトリにpictweetを配置している場合は任意のディレクトリに移動）</span>
<span class="nv">$ </span><span class="nb">cd </span>pictweet <span class="c">#pictweetディレクトリに移動</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<h3 class="ng-scope">
<i class="icon pen"></i> pictweetをSublime Text で開こう</h3>

<p class="ng-scope">ご自身のpictweetをエディタで開いてください。完成しているものでない場合この後のカリキュラムに従って作業しても正しく動かないことがあるので、必ず完成しているものを選択してください。今後はこのpictweetを編集していきます。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> Gemfileの記述を確認しよう</h3>

<p class="ng-scope">Gemfileに<code>jquery-rails</code>が記載されているか確認しましょう。</p>

<div class="code-frame ng-scope" data-lang="ruby">
<div class="code-lang"><span class="bold">pictweet/Gemfile</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td>
<td class="code">
<div class="highlight"><pre>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
 <span class="err">（中略）</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
<span class="c1"># Use jquery as the JavaScript library</span>
<span class="n">gem</span> <span class="s1">'jquery-rails'</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
 <span class="err">（中略）</span>
  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">記載されてにない場合は最下部に記載し、<code>bundle install</code>してください。</p>

<h3 class="ng-scope">
<i class="icon pen"></i>application.jsの記述を確認しよう</h3>

<p class="ng-scope">application.jsに<code>//= require jquery</code> <code>//= require jquery_ujs</code>の記載がされているか確認しましょう。</p>

<div class="code-frame ng-scope" data-lang="javascript">
<div class="code-lang"><span class="bold">application.js</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td>
<td class="code">
<div class="highlight"><pre>  <span class="p">...</span>
  <span class="err">（中略）</span>
  <span class="p">...</span>
<span class="c1">//= require jquery</span>
<span class="c1">//= require jquery_ujs</span>
  <span class="p">...</span>
  <span class="err">（中略）</span>
  <span class="p">...</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">記載がない場合は、上記を参考に記載してください。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> 必要なクラス名とIDを与える</h3>

<p class="ng-scope">後のajaxの非同期通信を実装するために事前にコメントのフォームにクラス名を与えておきます。<br>
app/views/tweets/show.html.erbの投稿フォームに以下に記述されている<br>
以下のように記述できたら先に進んでください。</p>

<div class="code-frame ng-scope" data-lang="html">
<div class="code-lang"><span class="bold">app/views/tweets/show.html.erb</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td>
<td class="code">
<div class="highlight"><pre><span class="hll">      <span class="err">&lt;</span>%= form_tag("/tweets/#{@tweet.id}/comments",  method: :post,  id: "new_comment" ) do %&gt;
</span><span class="hll">        <span class="nt">&lt;textarea</span> <span class="na">cols=</span><span class="s">"30"</span> <span class="na">name=</span><span class="s">"text"</span> <span class="na">placeholder=</span><span class="s">"コメントする"</span> <span class="na">rows=</span><span class="s">"2"</span> <span class="na">class=</span><span class="s">"textbox"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
</span>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">value=</span><span class="s">"SENT"</span><span class="nt">&gt;</span>
      <span class="err">&lt;</span>% end %&gt;
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">変更点は赤字のidとclassを書き加えることです。<br>
form_tag(..., <code>id: "new_comment"</code>  )<br>
　　＜textarea... <code>class="textbox"</code>  ＞</p>

<h2 class="ng-scope" id="5">コメント機能を非同期通信化しよう</h2>

<p class="ng-scope">では準備が完了しましたので、コメント機能を非同期通信で行えるようにしましょう。<br>
コメント機能の非同期通信では、respond_toやAjaxの他に新しくjbuilderというものを使います。</p>

<h3 class="ng-scope">コメント機能実装のステップ</h3>

<ol class="ng-scope">
<li>jQueryを記述するためのファイルを作成する</li>
<li>フォームが送信されたら、イベントが発火するようにする</li>
<li>非同期通信でコメントが保存されるようにする</li>
<li>respond_toを使用してHTMLとJSONの場合で処理を分ける</li>
<li>jbuilderを使用して、作成したメッセージをJSON形式で返す</li>
<li>返ってきたJSONを<code>doneメソッド</code>で受取り、HTMLを作成する</li>
<li>エラー時の処理を行う</li>
</ol>

<h3 class="ng-scope">1. jQueryを記述するためのファイルを作成する</h3>

<p class="ng-scope">ここからは、jQueryを記述しながらAjaxによる非同期通信の実現を目指します。Ruby on Rails内では、JavaScriptファイルを<code>assets/javascripts</code>以下に作成します。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> comment.jsというファイルをassets/javascripts以下に作成する</h3>

<ul class="filetree ng-scope">
  <li class="t-folder"> app
    <ul>
      <li class="t-folder"> assets
        <ul>
          <li class="t-folder"> javascripts
            <ul>
              <li class="t-file">comment.js </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 class="ng-scope">2.  フォームが送信されたら、イベントが発火するようにする</h3>

<p class="ng-scope">テキストフィールドに文字が入力されるたびにイベントが呼び出させるようにしましょう。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> jQueryを記述してみよう</h3>

<p class="ng-scope">先ほど作成したcomment.jsにコメントフォームが送信された時に、フォームに入力された値を受け取れるように以下の記述をしましょう。</p>

<div class="code-frame ng-scope" data-lang="javascript">
<div class="code-lang"><span class="bold">commnet.js</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td>
<td class="code">
<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">'#new_comment'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'submit'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="kd">var</span> <span class="nx">formData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
  <span class="p">})</span>
<span class="p">})</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">では上記のコードを解説していきます。<br>
フォームが送信された時に、デフォルトだとフォームを送信するための通信が行われるため、preventDefault()を使用してデフォルトのイベントを止めます。<br>
ここで新しくFormDataというものが出てきました。</p>

<h3 class="ng-scope">
<i class="icon information"></i> FormData</h3>

<p class="ng-scope">フォームのデータの送信に使用することすることができます。その他にもキーのついたデータを伝送するためにフォームとは独立して使用することもできます。今回はコメントフォームがあるのでそのフォームの情報を取得するのに使います。</p>

<p class="ng-scope">FormDataオブジェクトの引数はthisとなっています。イベントで設定したfunction内でthisを利用した場合はイベントが発生したDOM要素を指します。今回であればnew_commentというIDがついたフォームの情報を取得しています。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> フォームの値を確認してみましょう。</h3>

<div class="code-frame ng-scope" data-lang="javascript">
<div class="code-lang"><span class="bold">comments.js</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td>
<td class="code">
<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">'#new_comment'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'submit'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
<span class="hll">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">)</span>
</span>    <span class="kd">var</span> <span class="nx">formData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
  <span class="p">})</span>
<span class="p">})</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">編集ができたら、検索の画面でコンソールを開き、thisの中身がなにか確認してみましょう。<br>
以下の画像の様にコンソールで入力した値が出力されていれば正解です！<br>
JavaScriptではこのようにしてconsole.logを用いてデバッグを行います。<br>
他にもdebuggerというデバッグ方法もありますので、使い方を確認しておきましょう。<br>
<a href="http://postd.cc/javascript-debugging-tips-and-tricks/">http://postd.cc/javascript-debugging-tips-and-tricks/</a></p>

<p class="ng-scope"><a href="https://gyazo.com/69302f874250f38183670305d2be0096"><img src="./create.json.jbuilder_files/69302f874250f38183670305d2be0096.gif" alt="https://gyazo.com/69302f874250f38183670305d2be0096"></a></p>

<h3 class="ng-scope">3.  非同期通信でコメントが保存されるようにする</h3>

<p class="ng-scope">フォームに入力されたデータを取得したら、必要なAjax関数のオプションを揃えて非同期通信を行います。</p>

<ol class="ng-scope">
<li>フォームの送信が行われた時にAjaxによる非同期通信でcreateアクションを動かす</li>
<li>コメントを保存し、respond_toを使用してHTMLとJSONの場合で処理を分ける</li>
</ol>

<p class="ng-scope">それでは、上記の流れに沿ってコードを書いていきましょう。まずは、<code>comment.js</code>の編集を行いましょう。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> comment.jsを以下のように編集しましょう</h3>

<div class="code-frame ng-scope" data-lang="javascript">
<div class="code-lang"><span class="bold">comment.js</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td>
<td class="code">
<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">'#new_comment'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'submit'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
<span class="hll">    <span class="kd">var</span> <span class="nx">formData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class="hll">    <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'action'</span><span class="p">)</span>
</span><span class="hll">    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class="hll">      <span class="nx">url</span><span class="o">:</span> <span class="nx">url</span><span class="p">,</span>
</span><span class="hll">      <span class="nx">type</span><span class="o">:</span> <span class="s2">"POST"</span><span class="p">,</span>
</span><span class="hll">      <span class="nx">data</span><span class="o">:</span> <span class="nx">formData</span><span class="p">,</span>
</span><span class="hll">      <span class="nx">dataType</span><span class="o">:</span> <span class="s1">'json'</span><span class="p">,</span>
</span><span class="hll">      <span class="nx">processData</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class="hll">      <span class="nx">contentType</span><span class="o">:</span> <span class="kc">false</span>
</span>    <span class="p">})</span>
  <span class="p">})</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">4行目でフォームの送信先のurlを定義しています。$(this)はthisで取得できる要素をjQueryオブジェクト化しています。ここで新しくattrメソッドが出てきました。</p>

<h3 class="ng-scope">
<i class="icon information"></i> attrメソッド</h3>

<p class="ng-scope">要素が持つ指定属性の値を返します。<br>
要素が指定属性を持っていない場合、関数はundefinedを返します。</p>

<p class="ng-scope">今回はイベントが発生した要素のaction属性の値を取得しており、今回のaction属性にはフォームの送信先のurlの値が入っています。<br>
これでリクエストを送信する先のURLを定義することができました。</p>

<p class="ng-scope">続いて5~12行目がAjaxで非同期通信に必要なオプションを設定します。processDataとcontentTypeというものが新しくでてきました。</p>

<h3 class="ng-scope">
<i class="icon information"></i> processDataオプション</h3>

<p class="ng-scope">デフォルトではtrueになっておりdataに指定したオブジェクトをクエリ文字列(例: msg.txt?b1=%E3%81%8B&amp;b2=%E3%81%8D )に変換する役割があります。<br>
クエリ文字列とはWebブラウザなどがWebサーバに送信するデータをURLの末尾に特定の形式で表記したものの事です。</p>

<h3 class="ng-scope">
<i class="icon information"></i> contentTypeオプション</h3>

<p class="ng-scope">サーバにデータのファイル形式を伝えるヘッダです。こちらはデフォルトでは「text/xml」でコンテンツタイプをXMLとして返してきます。</p>

<p class="ng-scope">ajaxのリクエストがFormDataのときはどちらの値も適切な状態で送ることが可能なため、falseにすることで設定が上書きされることを防ぎます。FormDataをつかってフォームの情報を取得した時には必ずfalseにするという認識で構いません。<br>
他にもAjaxリクエストを送信するオプションは多くあります。気になる方はこちらを参考にしましょう。<br>
<a href="http://js.studio-kingdom.com/jquery/ajax/ajax">http://js.studio-kingdom.com/jquery/ajax/ajax</a></p>

<h3 class="ng-scope">4. コメントを保存し、respond_toを使用してHTMLとJSONの場合で処理を分ける</h3>

<p class="ng-scope">非同期通信によって、<code>comment#create</code>を動かすことに成功し、正しくAjaxから<code>data</code>を送れていれば、そのまま保存することが可能です。<br>
保存ができていることを確認したら、<code>respond_to</code>を使用してHTMLとJSONの場合で処理を書いていきます。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> コントローラーを以下のように編集しましょう</h3>

<div class="code-frame ng-scope" data-lang="ruby">
<div class="code-lang"><span class="bold">comments_controller.rb</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td>
<td class="code">
<div class="highlight"><pre>  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@comment</span> <span class="o">=</span> <span class="no">Comment</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">text</span><span class="p">:</span> <span class="n">comment_params</span><span class="o">[</span><span class="ss">:text</span><span class="o">]</span><span class="p">,</span> <span class="ss">tweet_id</span><span class="p">:</span> <span class="n">comment_params</span><span class="o">[</span><span class="ss">:tweet_id</span><span class="o">]</span><span class="p">,</span> <span class="ss">user_id</span><span class="p">:</span> <span class="n">current_user</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
<span class="hll">    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class="hll">      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="n">tweet_path</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:tweet_id</span><span class="o">]</span><span class="p">)</span>  <span class="p">}</span>
</span><span class="hll">      <span class="nb">format</span><span class="o">.</span><span class="n">json</span>
</span><span class="hll">    <span class="k">end</span>
</span>  <span class="k">end</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">comment_params</span>
    <span class="n">params</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:text</span><span class="p">,</span> <span class="ss">:tweet_id</span><span class="p">)</span>
  <span class="k">end</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">respond_to doを使用し、リクエストされたformatによって処理を分けるようにします。フォーマットがjsonの時の説明をします。todoリストのアプリではformat.jsonに引数としてインスタンスを渡しましたが、今回はjbuilderを使ってJavaScriptに返すデータを作成します。</p>

<h3 class="ng-scope">
<i class="icon information"></i> jbuilder</h3>

<p class="ng-scope">rails newコマンドでアプリケーションを作成した際にgemfileにデフォルトで記述されているgemで、入力データをJSON形式で出力するテンプレートエンジンです。</p>

<p class="ng-scope">今回はJbuilderを利用するので、コントローラ内でrender json: ○○を行いません。</p>

<h3 class="ng-scope">5.  jbuilderを使用して、作成したメッセージをJSON形式で返す</h3>

<p class="ng-scope">respond_toで処理を分けたら、<code>jbuilder</code>を使用してJavaScriptファイルに返すデータを作成します。<br>
jbuilderは、viewを同じように該当するアクションと同じ名前にする必要があります。<br>
commentのcreateアクションに対応するjbuilderのファイルになるので<code>views/comments/create.json.jbuilder</code>になります。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> jbuilderのファイルを作成してJavaScriptで必要な情報を渡すようにしよう。</h3>

<div class="code-frame ng-scope" data-lang="javascript">
<div class="code-lang"><span class="bold">views/comments/create.json.jbuilder</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td>
<td class="code">
<div class="highlight"><pre>  <span class="nx">json</span><span class="p">.</span><span class="nx">text</span>  <span class="err">@</span><span class="nx">comment</span><span class="p">.</span><span class="nx">text</span>
  <span class="nx">json</span><span class="p">.</span><span class="nx">user_id</span>  <span class="err">@</span><span class="nx">comment</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">id</span>
  <span class="nx">json</span><span class="p">.</span><span class="nx">user_name</span>  <span class="err">@</span><span class="nx">comment</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">nickname</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">jbuilderファイルでは基本的にjson.KEY VALUEという形で書くことができます。<br>
こうすることによってJavaScriptファイルに返ってきたデータをjbuilderで定義したキーとバリューの形で呼び出して使うことができます。<br>
複雑なjsonの生成も見やすく書くことができますので積極的にjbuilderを使っていきましょう。</p>

<h3 class="ng-scope">6.  返ってきたJSONを<code>doneメソッド</code>で受取り、HTMLを作成する</h3>

<p class="ng-scope">非同期通信の結果として返ってくるデータは、done(function(data) { 処理 })の関数の引数で受け取ります。<br>
この引数を元にHTMLを組み立てましょう。</p>

<h3 class="ng-scope">
<i class="icon pen"></i> comment.jsを以下のように編集してください</h3>

<div class="code-frame ng-scope" data-lang="javascript">
<div class="code-lang"><span class="bold">comment.js</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></div></td>
<td class="code">
<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
<span class="hll">  <span class="kd">function</span> <span class="nx">buildHTML</span><span class="p">(</span><span class="nx">comment</span><span class="p">){</span>
</span><span class="hll">    <span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="err">`</span><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class="hll">                  <span class="o">&lt;</span><span class="nx">strong</span><span class="o">&gt;</span>
</span><span class="hll">                    <span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="sr">/users/</span><span class="nx">$</span><span class="p">{</span><span class="nx">comment</span><span class="p">.</span><span class="nx">user_id</span><span class="p">}</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">{</span><span class="nx">comment</span><span class="p">.</span><span class="nx">user_name</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/a&gt;</span>
</span><span class="hll">                    <span class="err">：</span>
</span><span class="hll">                  <span class="o">&lt;</span><span class="err">/strong&gt;</span>
</span><span class="hll">                  <span class="nx">$</span><span class="p">{</span><span class="nx">comment</span><span class="p">.</span><span class="nx">text</span><span class="p">}</span>
</span><span class="hll">                <span class="o">&lt;</span><span class="err">/p&gt;`</span>
</span><span class="hll">    <span class="k">return</span> <span class="nx">html</span><span class="p">;</span>
</span><span class="hll">  <span class="p">}</span>
</span>  <span class="nx">$</span><span class="p">(</span><span class="s1">'#new_comment'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'submit'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
    <span class="kd">var</span> <span class="nx">formData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">href</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">+</span> <span class="s1">'/comments'</span>
    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
      <span class="nx">url</span><span class="o">:</span> <span class="nx">href</span><span class="p">,</span>
      <span class="nx">type</span><span class="o">:</span> <span class="s2">"POST"</span><span class="p">,</span>
      <span class="nx">data</span><span class="o">:</span> <span class="nx">formData</span><span class="p">,</span>
      <span class="nx">dataType</span><span class="o">:</span> <span class="s1">'json'</span><span class="p">,</span>
      <span class="nx">processData</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="nx">contentType</span><span class="o">:</span> <span class="kc">false</span>
    <span class="p">})</span>
<span class="hll">    <span class="p">.</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class="hll">      <span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="nx">buildHTML</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class="hll">      <span class="nx">$</span><span class="p">(</span><span class="s1">'.comments'</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span>
</span><span class="hll">      <span class="nx">$</span><span class="p">(</span><span class="s1">'.textbox'</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="s1">''</span><span class="p">)</span>
</span><span class="hll">    <span class="p">})</span>
</span>  <span class="p">})</span>
<span class="p">});</span>
</pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">24-28行目は、非同期通信に成功した時の記述です。function(data)となっていますが、非同期通信に成功した時の即時関数の第一引数には、サーバから返されたデータが入っています。この場合のサーバから返ってくるデータというのは、jbuilderで作成したcreate.json.jbuilderのデータです。<br>
2-11行目ではHTMLを追加しています。簡単な記述で実現できるのは、<code>テンプレートリテラル記法</code>を使用しているからです。</p>

<h3 class="ng-scope">
<i class="icon information"></i> テンプレートリテラル記法</h3>

<p class="ng-scope">ダブルクオートやシングルクオートの代わりに<code>バックティック文字</code>で囲むことで、複数行文字列や文字列内挿入機能を使用できます。</p>

<p class="ng-scope">テンプレートリテラル記法を使用することで、わかりやすくHTML要素を作成できます！</p>

<p class="ng-scope">buildHTMLの引数として渡されたcommentはサーバから返されたデータであるjbuilderのデータであるため、ファイル内で定義したキーとバリューの形式で使用することができます。</p>

<h4 class="ng-scope">
<i class="icon attention"></i>テンプレートリテラルを使用するときの注意</h4>

<p class="ng-scope">テンプレートリテラルは、比較的新しい記述の仕方のため、アプリケーションをデプロイする際にエラーになります。</p>

<p class="ng-scope">ChatSpace等で使う場合は、下記の通り設定をコメントアウトしてください。</p>

<div class="code-frame ng-scope" data-lang="Ruby]">
<div class="code-lang"><span class="bold">config/environments/production.rb</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1</pre></div></td>
<td class="code">
<div class="highlight"><pre>  // config.assets.js_compressor = :uglifier
</pre></div>
</td>
</tr></tbody></table>
</div>

<h3 class="ng-scope">7.エラー時の処理を行う</h3>

<p class="ng-scope">最後に通信に失敗した場合の処理を実装しましょう。<br>
アラートを表示ができれば成功です。</p>

<div class="code-frame ng-scope" data-lang="javascript">
<div class="code-lang"><span class="bold">comment.js</span></div>
<table class="highlighttable"><tbody><tr>
<td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td>
<td class="code">
<div class="highlight"><pre>    <span class="p">.</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
      <span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="nx">buildHTML</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
      <span class="nx">$</span><span class="p">(</span><span class="s1">'.comments'</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span>
      <span class="nx">$</span><span class="p">(</span><span class="s1">'.textbox'</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="s1">''</span><span class="p">)</span>
    <span class="p">})</span>
<span class="hll">    <span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="hll">      <span class="nx">alert</span><span class="p">(</span><span class="s1">'error'</span><span class="p">);</span>
</span><span class="hll">    <span class="p">})</span>
</span></pre></div>
</td>
</tr></tbody></table>
</div>

<p class="ng-scope">サーバーエラーの場合、このfailの関数が呼ばれます。<br>
以上でコメント機能の非同期通信化の実装は終了です！</p>
</div>
          <!-- ngIf: curriculum.short_test -->
          <section class="progress-checker text-center" ng-init="init()">
  <h3>このカリキュラムの理解度を教えてください</h3>
  <h4>ボタンを押していただくと次へ進めます</h4>
  <div class="progress-checker-buttons">
    <ul>
      <li id="progress-not_surely" class="red" ng-click="send_state(&#39;not_surely&#39;)"></li>
      <li id="progress-well" class="blue gray-out" ng-click="send_state(&#39;well&#39;)"></li>
      <li id="progress-perfectly" class="green gray-out" ng-click="send_state(&#39;perfectly&#39;)"></li>
    </ul>
  </div>
  <ul class="curriculum-router-buttons">
    <li class="previous-button" ng-show="curriculum.previous_id" style="">
      <a ng-click="go_previous()">&lt;&lt;前のカリキュラム</a>
    </li>
    <li class="next-button" ng-show="curriculum.next_id" style="">
      <a ng-click="go_next()">次のカリキュラム&gt;&gt;</a>
    </li>
  </ul>
</section>
          <section class="progress-share bg_icon-pattern text-center">
            <h1 class="progress-share_title" id="6">お疲れさまです！</h1>
            <p>
              <strong class="ng-binding">
                pictweetのコメント機能の非同期通信化
              </strong>
              はここまでです。
              <br>
              SNSで学習の進み具合を友達にシェアしてみましょう！
            </p>
            <div class="progress-share_actions">
              <a href="https://twitter.com/intent/tweet/?text=TECH%3A%3ACAMP%E3%81%A7%E3%80%8Cpictweet%E3%81%AE%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E6%A9%9F%E8%83%BD%E3%81%AE%E9%9D%9E%E5%90%8C%E6%9C%9F%E9%80%9A%E4%BF%A1%E5%8C%96%E3%80%8D%E3%81%AE%E5%AD%A6%E7%BF%92%E3%82%92%E4%BF%AE%E4%BA%86%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F%EF%BC%81+%23%E3%83%86%E3%83%83%E3%82%AF%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%97+%23%E3%83%86%E3%83%83%E3%82%AF%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%97%E3%81%A7%E5%8B%89%E5%BC%B7%E3%81%AA%E3%81%86+&amp;url=https%3A%2F%2Ftech-camp.in" class="twitter" target="_blank">
                <img class="icon twitter-icon" src="./create.json.jbuilder_files/icon-twitter.svg" alt="">
                Twitterでシェア
              </a>
              <a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Ftech-camp.in" class="facebook" target="_blank">
              <img class="icon facebook-icon" src="./create.json.jbuilder_files/icon-facebook.svg" alt="">
                Facebookでシェア
              </a>
            </div>
          </section>
        </div>
      </div>
      <div class="col-md-3 col-sm-12" id="curriculumSideContainer">
        <curriculum-side-wrap id="sideWrap" class="fixed-side" style="width: 220px;">
          <ul class="list-group toc-tree" id="curriculumContents" style="max-height: 785px;">
  <li class="list-group-item disabled">
    目次
  </li>
  <!-- ngRepeat: content in contents --><li ng-repeat="content in contents" class="ng-scope">
    <a class="content-link ng-binding" id="contents1" ng-click="clickContent(content.h1.id)">本カリキュラムについて</a>
    <ul class="list-group">
      <!-- ngRepeat: h2 in content.h2 track by $index --><li ng-repeat="h2 in content.h2 track by $index" class="ng-scope">
        <a class="content-link ng-binding" id="contents2" ng-click="clickContent(h2.id)">本カリキュラムの目的</a>
      </li><!-- end ngRepeat: h2 in content.h2 track by $index -->
    </ul>
  </li><!-- end ngRepeat: content in contents --><li ng-repeat="content in contents" class="ng-scope">
    <a class="content-link ng-binding" id="contents3" ng-click="clickContent(content.h1.id)">pictweetのコメント機能を非同期通信で行ってみよう</a>
    <ul class="list-group">
      <!-- ngRepeat: h2 in content.h2 track by $index --><li ng-repeat="h2 in content.h2 track by $index" class="ng-scope">
        <a class="content-link ng-binding" id="contents4" ng-click="clickContent(h2.id)">事前準備</a>
      </li><!-- end ngRepeat: h2 in content.h2 track by $index --><li ng-repeat="h2 in content.h2 track by $index" class="ng-scope">
        <a class="content-link ng-binding current" id="contents5" ng-click="clickContent(h2.id)">コメント機能を非同期通信化しよう</a>
      </li><!-- end ngRepeat: h2 in content.h2 track by $index -->
    </ul>
  </li><!-- end ngRepeat: content in contents --><li ng-repeat="content in contents" class="ng-scope">
    <a class="content-link ng-binding" id="contents6" ng-click="clickContent(content.h1.id)">お疲れさまです！</a>
    <ul class="list-group">
      <!-- ngRepeat: h2 in content.h2 track by $index -->
    </ul>
  </li><!-- end ngRepeat: content in contents -->
</ul>
          <div class="progress_box ng-scope ng-hide" ng-show="check_count &gt; 0" style="">
  <!-- ngIf: showTroubleShooting() -->
  <!-- <p class="terms" ng-if="courseId != 9 && courseId != 10">
    分からない用語がある時：<br /><a href="/terms" target="_brank">用語一覧集</a>
  </p> -->
  <h4>
    進捗度<i id="numerator" class="ng-binding">0 / 0<span id="denominaotr"></span></i>
  </h4>
  <div class="progress">
    <div aria-valuemax="100" aria-valuemin="0" aria-valuenow="0" class="pregress-bar progress-bar-info ng-binding" role="progressbar" style="width: 0%;">
      0%
    </div>
  </div>
</div>
          <!-- <curriculum-glossary ng-show="curriculum.curriculum_type == 2 || curriculum.curriculum_type == 3"></curriculum-glossary> -->
          <button class="curriculum-report-button" ng-click="show_curriculum_report()">
            <img src="./create.json.jbuilder_files/idea.svg" width="20px" height="20px">
            | このカリキュラムへのご要望
          </button>
        </curriculum-side-wrap>
      </div>
    </div>

    <!-- <curriculum-footer></curriculum-footer> -->
  </div>
</curriculum>
<div id="loading" ng-show="loading" class="ng-scope ng-isolate-scope ng-hide" style="">
  <svg height="44" stroke="#444" viewBox="0 0 44 44" width="44" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd" strole-width="2"><circle cx="22" cy="22" r="12.4945"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"></animate><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"></animate></circle><circle cx="22" cy="22" r="19.5413"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"></animate><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"></animate></circle></g></svg>
</div>

<div class="curriculum-image__modal modal ng-scope" id="curriculum-image__modal" role="dialog" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button class="close" data-dismiss="modal" ng-click="close()"><span aria-hidden="true">×</span></button>
      </div>
      <div class="modal-body">
        <div class="curriculum-image__img__body">
          <img class="curriculum-image__img zoom-out" id="curriculum-image__img">
        </div>
      </div>
    </div>
  </div>
</div>

<style type="text/css" class="ng-scope">
  .curriculum-inner{position: relative;}
  #curriculumSideContainer{position: static;}
  #sideWrap{display: block;}
  .fixed-side{position: fixed; top :110px}
  .absoluted-side-bottom{position: absolute; bottom :0}
  .toc-tree{position: relative; overflow-y: auto;}
  .content-link {cursor: pointer;}
</style>
</div><div id="js-support-popwindow"><div class="popwindow_box" style="bottom: -400px;"><div id="minimization_btn"><h3>メンターを呼ぶ</h3><div class="minimization_btn">−</div></div><p>質問がある際は、こちらからメンターを呼ぶことができます</p><div class="form_box" id="before_sent"><form accept-charset="UTF-8" action="https://master.tech-camp.in/office_question_notifications" class="new_office_question_notification ng-pristine ng-valid" data-remote="true" id="new_office_question_notification" method="post"><div style="display:none"><input name="utf8" type="hidden" value="✓"></div><input id="office_question_notification_user_id" name="office_question_notification[user_id]" type="hidden" value="14299"><input id="office_question_notification_coming_log_id" name="office_question_notification[coming_log_id]" type="hidden" value="135007"><input class="form_box-address" id="office_question_notification_seat_number" name="office_question_notification[seat_number]" placeholder="座席番号を入力" type="number"><input class="form_box-submit" data-disable-with="送信中" disabled="disabled" name="commit" type="submit" value="メンターを呼ぶ"></form></div><div class="form_box_after" id="after_sent"><p>少々お待ちください</p></div><div class="form_box_after" id="not_sent"><p>エキスパートコースの方はこの時間は質問できません</p></div></div><div class="minimized_window" id="popwindow_box"><div class="minimized_window_btns"><a class="minimized_window_btn mentor_question_btn" id="maximization_btn">メンターを呼ぶ</a><a class="go_out_btn minimized_window_btn" data-method="patch" href="https://master.tech-camp.in/me/comings/14299?coming=go_out" rel="nofollow" target="_self">退席する</a></div></div></div></body></html>